//Adam Miszkiewicz 200547405
// C++ code to control green and yellow LEDs using an IR remote
// the remote buttons: 
//1,2,4,5,6,8,9,10,12,13,14
//16,17,18,20,21,22,24,25,26

#include <IRremote.h>

// Button definitions
#define pwr 0
#define btn1 16
#define btn2 17
#define btn3 18
#define btn4 20

// Pin definitions
int RECV_PIN = 11;
int green = 12;
int yellow = 13;

// State variables
int menuState = 0;
bool power = false;
int value;

// Set up IR receiver
IRrecv irrecv(RECV_PIN);

// Function to print menu options
void printMenu(const char* menuName, const char* option1, const char* option2, const char* option3, const char* option4) {
  Serial.println(menuName);
  Serial.println(option1);
  Serial.println(option2);
  Serial.println(option3);
  Serial.println(option4);
}

// Main setup function
void setup()
{
  Serial.begin(9600);
  irrecv.enableIRIn();
  pinMode(green, OUTPUT);
  pinMode(yellow, OUTPUT);
}

// Main loop function
void loop()
{
  // Check for IR signal
  if (irrecv.decode())
  {
    value = irrecv.decodedIRData.command;
    irrecv.resume();
    bool menuChanged = false;

    // Check for power button press
    if (value == pwr)
    {
      power = !power;
      digitalWrite(green, LOW);
      digitalWrite(yellow, LOW);
      menuState = 0;
      
      // Display welcome message or goodbye message
      if (power) {
        Serial.println("Welcome to the LED menu system.");
        Serial.println("Press button 1 for Green LED Control Menu");
        Serial.println("Press button 2 for Yellow LED Control Menu");
        Serial.println("Press button 3 for Both LEDs Control Menu");
      } else {
        Serial.println("Goodbye. Thanks for using the LED menu system.");
      }
    }

    // Only proceed if power is on
    if (power)
    {
      // Handle menu navigation and LED control
      switch (menuState)
      {
        case 0:
          if (value == btn1) { menuState = 1; menuChanged = true; }
          else if (value == btn2) { menuState = 2; menuChanged = true; }
          else if (value == btn3) { menuState = 3; menuChanged = true; }
          break;
        case 1:
          if (value == btn1) digitalWrite(green, HIGH);
          else if (value == btn2) digitalWrite(green, LOW);
          else if (value == btn3) { menuState = 2; menuChanged = true; }
          else if (value == btn4) { menuState = 3; menuChanged = true; }
          break;
        case 2:
          if (value == btn1) digitalWrite(yellow, HIGH);
          else if (value == btn2) digitalWrite(yellow, LOW);
          else if (value == btn3) { menuState = 1; menuChanged = true; }
          else if (value == btn4) { menuState = 3; menuChanged = true; }
          break;
        case 3:
          if (value == btn1) { digitalWrite(green, HIGH); digitalWrite(yellow, HIGH); }
          else if (value == btn2) { digitalWrite(green, LOW); digitalWrite(yellow, LOW); }
          else if (value == btn3) { menuState = 1; menuChanged = true; }
          else if (value == btn4) { menuState = 2; menuChanged = true; }
          break;
      }
      
// Check if the menu state has changed
if (menuChanged)
{
  // Depending on the menu state, display a different menu
  switch (menuState)
  {
    // Case 1: Green LED Control Menu
    case 1:
      printMenu("Green LED Control Menu:",
                "1. Turn ON green LED",
                "2. Turn OFF green LED",
                "3. Go to Yellow LED Control Menu",
                "4. Go to Both LEDs Control Menu");
      break;

    // Case 2: Yellow LED Control Menu
    case 2:
      printMenu("Yellow LED Control Menu:",
                "1. Turn ON yellow LED",
                "2. Turn OFF yellow LED",
                "3. Go to Green LED Control Menu",
                "4. Go to Both LEDs Control Menu");
      break;

    // Case 3: Both LEDs Control Menu
    case 3:
      printMenu("Both LEDs Control Menu:",
                "1. Turn ON both LEDs",
                "2. Turn OFF both LEDs",
                "3. Go to Green LED Control Menu",
                "4. Go to Yellow LED Control Menu");
      break;
    }
   }
  }
 }
}
